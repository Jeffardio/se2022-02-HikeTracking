# Generated by Django 4.1.3 on 2022-11-26 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(max_length=200)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hike',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=30, unique=True)),
                ('length', models.IntegerField()),
                ('expected_time', models.IntegerField()),
                ('ascent', models.IntegerField()),
                ('difficulty', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('track_file', models.FileField(upload_to='tracks')),
            ],
        ),
        migrations.CreateModel(
            name='HikeReferencePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Hut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('n_beds', models.IntegerField()),
                ('fee', models.FloatField()),
                ('desc', models.TextField(blank=True, default=' ')),
            ],
        ),
        migrations.CreateModel(
            name='HutFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ParkingLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('fee', models.FloatField()),
                ('n_cars', models.IntegerField()),
                ('desc', models.TextField(blank=True, default=' ')),
            ],
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('province', models.CharField(max_length=30)),
                ('village', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('none', 'None'), ('hut', 'Hut'), ('parking_lot', 'Parking Lot')], max_length=15)),
            ],
        ),
        migrations.AddConstraint(
            model_name='point',
            constraint=models.UniqueConstraint(fields=('latitude', 'longitude'), name='point'),
        ),
        migrations.AddField(
            model_name='parkinglot',
            name='point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.point', unique=True),
        ),
        migrations.AddField(
            model_name='hutfacility',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.facility'),
        ),
        migrations.AddField(
            model_name='hutfacility',
            name='hut',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.hut'),
        ),
        migrations.AddField(
            model_name='hut',
            name='point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.point', unique=True),
        ),
        migrations.AddField(
            model_name='hikereferencepoint',
            name='hike',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.hike'),
        ),
        migrations.AddField(
            model_name='hikereferencepoint',
            name='point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hiketracking.point'),
        ),
        migrations.AddField(
            model_name='hike',
            name='end_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_point', to='hiketracking.point'),
        ),
        migrations.AddField(
            model_name='hike',
            name='local_guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hike',
            name='start_point',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_point', to='hiketracking.point'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='hutfacility',
            constraint=models.UniqueConstraint(fields=('hut', 'facility'), name='hutfac'),
        ),
        migrations.AddConstraint(
            model_name='hikereferencepoint',
            constraint=models.UniqueConstraint(fields=('hike', 'point'), name='hikeref'),
        ),
    ]
